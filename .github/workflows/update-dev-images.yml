name: 'Update dev images'

on:
  # Triggers on push to any tag of form vX.X.X-dev
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-dev'

jobs:

  #
  # Call bake for each controller image in sequence
  #
  bake_controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (controller-base)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-controller-base
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

      - name: Build and push (example_python_controller)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            example_python_controller
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Call bake for each simulator image in sequence
  #
  bake_simulator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (sim-base-core)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-sim-base-core
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

      - name: Build and push (sim-{base-px4,ardupilot-gazebo})
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets:
            - starling-sim-base-px4
            - starling-sim-ardupilot-gazebo
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

      - name: Build and push (sim-iris{,-ap})
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets:
            - starling-sim-iris
            - starling-sim-iris-ap
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Call bake for the PX4 SITL
  #
  bake_px4_sitl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (sim-px4-sitl)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-sim-px4-sitl
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Bake the ArduPilot SITL
  #
  bake_ap_sitl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (sim-ardupilot-copter)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-sim-ardupilot-copter
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Call bake for the UI
  #
  bake_ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (UI)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-ui
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Call bake for mavros
  #
  bake_mavros:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (mavros)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-mavros
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev

  #
  # Call bake for vicon
  #
  bake_vicon:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags/}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (mavros)
        uses: docker/bake-action@master
        with:
          files: |
            ./buildtools/docker-bake.hcl
          targets: |
            starling-vicon
          push: true
        env:
          BAKE_VERSION: ${{ steps.tag_name.outputs.GITHUB_TAG }}
          BAKE_RELEASENAME: nightly
          BAKE_CACHETO_NAME: cache-dev
          BAKE_CACHEFROM_NAME: cache-dev
